apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app-api.fullname" . }}
  labels:
    {{- include "app-api.labels" . | nindent 4 }}
  # Record deployment cause for rollback and history
  annotations:
    kubernetes.io/change-cause: "Image {{ .Values.image.tag }} deployed at {{ now | date "2006-01-02T15:04:05Z07:00" }}"
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  # Configure safer rolling updates
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "app-api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        # Trigger pod restart when configmap changes
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "app-api.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app-api.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "app-api.fullname" . }}-env-config
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP

          # Read health check path from ingress if available
          {{- $healthPath := "/app-api/health" }}
          {{- if (and .Values.ingress.enabled .Values.ingress.annotations) }}
          {{- if (index .Values.ingress.annotations "alb.ingress.kubernetes.io/healthcheck-path") }}
          {{- $healthPath = index .Values.ingress.annotations "alb.ingress.kubernetes.io/healthcheck-path" }}
          {{- end }}
          {{- end }}

          # API server health checks using HTTP endpoint
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- else }}
          livenessProbe:
            httpGet:
              path: {{ $healthPath }}
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          {{- end }}

          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- else }}
          readinessProbe:
            httpGet:
              path: {{ $healthPath }}
              port: http
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          {{- end }}

          {{- with .Values.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- else }}
          startupProbe:
            httpGet:
              path: {{ $healthPath }}
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 30
            successThreshold: 1
          {{- end }}

          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      # Add grace period for clean shutdown
      terminationGracePeriodSeconds: 60
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
